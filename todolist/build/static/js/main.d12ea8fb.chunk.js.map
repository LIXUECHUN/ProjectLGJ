{"version":3,"sources":["xueliTodo/Todoinput.js","xueliTodo/Todoing.js","xueliTodo/Todolist.js","index.js"],"names":["Todoinput","addDateByEnter","e","keyCode","props","add","refs","value","className","ref","onKeyUp","this","Component","Todoing","removeData","index","changeChecked","todo","list","map","key","checked","type","onChange","bind","title","onClick","done","Todolist","temp","state","push","setState","splice","JSON","parse","localStorage","getItem","setItem","stringify","forEach","item","ReactDOM","render","document","getElementById"],"mappings":"kMAEqBA,E,2MAEjBC,eAAe,SAACC,GACK,KAAdA,EAAEC,UAED,EAAKC,MAAMC,IAAI,EAAKC,KAAL,MAAmBC,OAElC,EAAKD,KAAL,MAAmBC,MAAO,K,wEAI9B,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,SAAf,YACA,2BAAOC,IAAI,QAAQC,QAASC,KAAKV,uB,GAfdW,aCClBC,G,iNAEjBC,WAAW,SAACC,GACR,EAAKX,MAAMU,WAAWC,I,EAG1BC,cAAc,SAACD,GACX,EAAKX,MAAMY,cAAcD,I,wEAGnB,IAAD,OACL,OACI,yBAAKP,UAAU,WACX,2CAAM,8BAAOG,KAAKP,MAAMa,OAExB,4BAEQN,KAAKP,MAAMc,KAAKC,KAAI,SAACZ,EAAMa,GACvB,OAAIb,EAAMc,QASH,GAPC,wBAAID,IAAKA,GACL,2BAAQE,KAAK,WAAYD,QAASd,EAAMc,QAASE,SAAU,EAAKP,cAAcQ,KAAK,EAAKJ,KACvFb,EAAMkB,MACP,4BAAQC,QAAS,EAAKZ,WAAWU,KAAK,EAAMJ,IAA5C,aAQxB,iDAAO,8BAAOT,KAAKP,MAAMuB,OACzB,4BAEQhB,KAAKP,MAAMc,KAAKC,KAAI,SAACZ,EAAMa,GACvB,OAAGb,EAAMc,QAED,wBAAID,IAAKA,GACL,2BAAQE,KAAK,WAAYD,QAASd,EAAMc,QAASE,SAAU,EAAKP,cAAcQ,KAAK,EAAKJ,KACvFb,EAAMkB,MACP,4BAAQC,QAAS,EAAKZ,WAAWU,KAAK,EAAMJ,IAA5C,SAIL,Y,GA5CER,cCChBgB,E,YACjB,WAAYxB,GAAO,IAAD,uBACd,4CAAMA,KAaVC,IAAI,SAACoB,GACD,IAAMI,EAAO,CACTJ,MAAMA,EACNJ,SAAQ,GAENH,EAAQ,EAAKY,MAAMZ,KACzBA,EAAKa,KAAKF,GACV,EAAKG,SAAS,CACVd,KAAKA,KAtBK,EA2BlBJ,WAAW,SAACC,GACR,IAAMG,EAAQ,EAAKY,MAAMZ,KACzBA,EAAKe,OAAOlB,EAAM,GAClB,EAAKiB,SAAS,CACVd,KAAKA,KA/BK,EAoClBF,cAAc,SAACD,GAEX,IAAMG,EAAO,EAAKY,MAAMZ,KACxBA,EAAKH,GAAOM,SAAWH,EAAKH,GAAOM,QACnC,EAAKW,SAAS,CACVd,KAAMA,KAvCV,IAAMA,EAAOgB,KAAKC,MAAMC,aAAaC,QAAQ,aAF/B,OAKV,EAAKP,MADLZ,EACa,CACTA,KAAMA,GAGG,CACTA,KAAM,IAVA,E,mHAqDdkB,aAAaE,QAAQ,WAAYJ,KAAKK,UAAU5B,KAAKmB,MAAMZ,OAC3D,IAAID,EAAO,EACPU,EAAO,EAQX,OAPAhB,KAAKmB,MAAMZ,KAAKsB,SAAQ,SAACC,IACH,IAAfA,EAAKpB,QACJJ,IAEAU,OAIJ,yBAAKnB,UAAU,YAEX,kBAAC,EAAD,CAAWH,IAAKM,KAAKN,MACrB,kBAAC,EAAD,CAASS,WAAYH,KAAKG,WAAYE,cAAeL,KAAKK,cAAeE,KAAMP,KAAKmB,MAAMZ,KAAMD,KAAMA,EAAMU,KAAMA,S,GApE5Ff,aCctC8B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d12ea8fb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Todoinput extends Component {\r\n    // 回车添加代办\r\n    addDateByEnter=(e)=>{\r\n        if(e.keyCode === 13){\r\n            // 调用props中的add的方法\r\n            this.props.add(this.refs[\"title\"].value);\r\n            // 属性框归零\r\n            this.refs[\"title\"].value =\"\";\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"section\">\r\n                    <div className=\"label\">Todolist</div>\r\n                    <input ref=\"title\" onKeyUp={this.addDateByEnter} />           \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './todo.css';\r\n\r\nexport default class Todoing extends Component {\r\n    // 删除\r\n    removeData=(index)=>{\r\n        this.props.removeData(index);\r\n    }\r\n    // 元素值改变时\r\n    changeChecked=(index)=>{\r\n        this.props.changeChecked(index);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"section\">\r\n                <h2>待办<span>{this.props.todo}</span></h2>\r\n                \r\n                <ol>\r\n                    {\r\n                        this.props.list.map((value,key)=>{\r\n                            if(!value.checked){\r\n                                return (\r\n                                    <li key={key}>\r\n                                        <input  type=\"checkbox\"  checked={value.checked} onChange={this.changeChecked.bind(this,key)}/>\r\n                                        {value.title}\r\n                                        <button onClick={this.removeData.bind(this, key)}>×</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            return '';                            \r\n                        })\r\n                    }\r\n                </ol>\r\n                <h2>已完成<span>{this.props.done}</span></h2>\r\n                <ul>\r\n                    {\r\n                        this.props.list.map((value,key)=>{\r\n                            if(value.checked){\r\n                                return (\r\n                                    <li key={key}>\r\n                                        <input  type=\"checkbox\"  checked={value.checked} onChange={this.changeChecked.bind(this,key)}/>\r\n                                        {value.title}\r\n                                        <button onClick={this.removeData.bind(this, key)}>×</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            return '';                            \r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Todoinput from './Todoinput';\r\nimport Todoing from './Todoing';\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        const list = JSON.parse(localStorage.getItem('todolist'));\r\n        //判断前面有list\r\n        if (list) {\r\n            this.state = {\r\n                list: list\r\n            }\r\n        } else {\r\n            this.state = {\r\n                list: []\r\n            }\r\n        }\r\n    }\r\n    add=(title)=>{\r\n        const temp = {\r\n            title:title,\r\n            checked:false\r\n        }\r\n        const list  = this.state.list;\r\n        list.push(temp);\r\n        this.setState({\r\n            list:list\r\n        })\r\n    }\r\n\r\n    // 删除\r\n    removeData=(index)=>{\r\n        const list  = this.state.list;\r\n        list.splice(index,1);\r\n        this.setState({\r\n            list:list\r\n        })\r\n    }\r\n\r\n    // 元素值改变时\r\n    changeChecked=(index)=>{\r\n        // 获取list状态\r\n        const list = this.state.list;\r\n        list[index].checked = !list[index].checked;\r\n        this.setState({\r\n            list: list\r\n        })\r\n\r\n    }\r\n\r\n    //存储变量\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        localStorage.setItem('todolist', JSON.stringify(this.state.list));\r\n        let todo = 0;\r\n        let done = 0;\r\n        this.state.list.forEach((item)=>{\r\n            if(item.checked===false){\r\n                todo++;\r\n            }else{\r\n                done++;\r\n            }\r\n        })\r\n        return (\r\n            <div className=\"todolist\">\r\n                {/* 向子组件传方法 */}\r\n                <Todoinput add={this.add} />\r\n                <Todoing removeData={this.removeData} changeChecked={this.changeChecked} list={this.state.list} todo={todo} done={done} />\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App';\n// import './index.css';\n// 容器组件 / UI组件（展示组件）\n// 智能组件 / 木偶组件\n\n// 容器组件（container/pages）：逻辑，功能\n// UI组件（components）：写成函数组件，展示，返回React元素\n\n// 作业二\n// ReactDOM.render(\n//     <App/>,\n//     document.getElementById('root')\n// )\n\n// 雪梨todolist\nimport Todolist from './xueliTodo/Todolist';\nReactDOM.render(\n    <Todolist/>,\n    document.getElementById('root')\n)"],"sourceRoot":""}